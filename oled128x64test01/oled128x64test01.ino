#include "U8glib.h"

U8GLIB_SH1106_128X64 u8g(13, 11, 10, 9); // SCK = 13, MOSI = 11, CS = 10, A0 = 9
/*
= OLED screen =

GND  = GND (5V)
VCC  = 5V
CLK  = 13
MOSI = 11
RES  = RES
DC   = 9
CS   = 10

= Button =

GND = GND (3V)
VCC = 3V
SIG = 2
*/

const int buttonPin = 2;
int buttonState = 0;
int counter = 0;
const char* textToDisplay = "";
char counterText[4];

// Sprites
const unsigned char PROGMEM catlicking001[] =
{
// width, height,
13, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0x74, 0xbc, 0xb6, 0x80, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking002[] =
{
// width, height,
13, 11,
0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xfe, 0xf4, 0x34, 0x5c, 0x56, 0x40, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x03, 0x03, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking003[] =
{
// width, height,
13, 11,
0x00, 0x00, 0x00, 0x00, 0x00, 0xe2, 0xfc, 0xf8, 0x38, 0x5c, 0x58, 0x40, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x03, 0x03, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking004[] =
{
// width, height,
13, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc2, 0xfc, 0xf8, 0x78, 0xbc, 0xb8, 0x80, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking005[] =
{
// width, height,
13, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0x74, 0xbc, 0xb6, 0x80, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking006[] =
{
// width, height,
13, 11,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xac, 0xac, 0xbc, 0x28, 0x44, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x03, 0x03, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking007[] =
{
// width, height,
13, 11,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xac, 0xac, 0xbc, 0x20, 0x48, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x03, 0x03, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catlicking008[] =
{
// width, height,
13, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xec, 0xec, 0x9c, 0x2c, 0x64, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x00, 0x00, 0x00, 
};

const unsigned char PROGMEM catsitting001[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0xfc, 0xfc, 0x36, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting002[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0xfc, 0xfc, 0x36, 0x00, 
0x00, 0x04, 0x02, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting003[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0xfc, 0xfc, 0x36, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting004[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfe, 0xf4, 0xfc, 0xfc, 0x36, 0x00, 
0x00, 0x02, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting005[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfc, 0xfe, 0xf4, 0xfc, 0x3a, 0x00, 
0x00, 0x04, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting006[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfc, 0xfe, 0xf4, 0xfc, 0x3a, 0x00, 
0x00, 0x04, 0x02, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting007[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfc, 0xfe, 0xf4, 0xfc, 0x3a, 0x00, 
0x00, 0x02, 0x02, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

const unsigned char PROGMEM catsitting008[] =
{
// width, height,
12, 12,
0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xfc, 0xfe, 0xf4, 0xfc, 0x3a, 0x00, 
0x00, 0x02, 0x04, 0x00, 0x06, 0x07, 0x07, 0x01, 0x07, 0x01, 0x06, 0x00, 
};

void draw(const char* text, int posx, int posy) {
  // graphic commands to redraw the complete screen should be placed here
  u8g.setFont(u8g_font_unifont);
  //u8g.setFont(u8g_font_osb21);
  u8g.drawStr(posx, posy, text);
}

void setup(void) {
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);
  // flip screen, if required
  u8g.setRot180();
  // set SPI backup if required
  //u8g.setHardwareBackup(u8g_backup_avr_spi);
  // assign default color value
  if ( u8g.getMode() == U8G_MODE_R3G3B2 ) {
    u8g.setColorIndex(255); // white
  }
  else if ( u8g.getMode() == U8G_MODE_GRAY2BIT ) {
    u8g.setColorIndex(3); // max intensity
  }
  else if ( u8g.getMode() == U8G_MODE_BW ) {
    u8g.setColorIndex(1); // pixel on
  }
  else if ( u8g.getMode() == U8G_MODE_HICOLOR ) {
    u8g.setHiColorByRGB(255,255,255);
  }
}

void loop(void) {
  // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);
  if (buttonState == HIGH) {
    // Button released
    textToDisplay = "Meuh !";
  } else {
    // Button pressed
    textToDisplay = "Coin !";
    counter += 1;
  }
  itoa(counter, counterText, 10);
  // picture loop
  u8g.firstPage();
  do {
    draw(textToDisplay, 10, 22);
    draw(counterText, 10, 42);
  } while( u8g.nextPage() );
  // rebuild the picture after some delay
  delay(50);
}
